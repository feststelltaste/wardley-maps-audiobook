Chapter 5 - Section 3.: The near, the far and the crazy

   Back in the late 90s, I had taken a deep interest in 3D printing. It was the main reason why I had originally joined the near bankrupt online photo service in early 2000 because I envisaged a future where images of physical things would be shared. I wanted to learn about the space of sharing images. When we were acquired by one of the world’s largest printer manufacturers, I was overjoyed. I assumed that they too would share my passion. I gave numerous presentations on the topic both externally and internally within the parent company on this subject and to my disappointment it was always the external crowd that got more excited. In 2004, I gave a presentation at Euro Foo on the future of 3D printers. The subject was a pretty hot topic at the time and one of the audience that I was fortunate enough to meet was Bre Pettis who was demonstrating his felt-tip pen printer, the DrawBot. Why fortunate? Bre founded MakerBot and subsequently rocked the world of 3D printing.

   Whilst 3D printing was a passion, I had also an interest in printed electronics especially the work of Sirringhaus and Kate Stone. I started to use these concepts to describe a future world of how manufacturing would change. The basics are provided in figure 53 but we will go through each step of this map. I’m going to assume you’re becoming more familiar with maps and so we will just dive in.
See    Figure 53: The near, the far and the crazy
 for more details.
   First let us start with the user need for some device (Point 1). I’ll leave it as generic because I want to cover manufacturing itself and not the specific use of one device over another. Our device would have physical elements including electronics along with any software that would interact with it. The physical and electronic elements are commonly described through some form of computer aided design (CAD) diagram which provides instructions on what to build and this is combined with our software which is simply our code (Point 2).

   The physical form would normally be manufactured by a factory which generally used common machinery involved in significant custom processes. However, this was starting to change with concepts such as digital factories and even 3D printers which were becoming less magical and more common (Point 3). This promised a future world of highly industrialised factories without extensive re-tooling for each product run. Also, since those first inkjet-printed transistors of Sirringhaus in 2001, a new field of plastic and printed electronics was rapidly growing (Point 4). Electronics manufacture was on the path to becoming industrialised and I would just print the electronics I needed rather than combine a mix of commodity and non-commodity components on my own circuit board created on some assembly line that changed with every product run.

   For me, the interesting aspect of this was the combination of both physical and electronic forms. In 2005, I had become aware of several University led efforts to create hybrid objects including junction boxes where both the physical form and electrical components were printed (Point 5). This too would become industrialised to a world in which I printed my entire device rather than used factories which assembled. Now, along with potential for creating novel materials and components, this also had the opportunity to fundamentally change the concept of design.

   The function of a device is a combination of its physical form, its electronics and any software that interacts with this. As hybrid printers industrialise then this function is described by purely digital means — the CAD (an instruction set) which is then printed and the code (an instruction set) which is run. When we wish to change the function of a device then we need to change one of those two instruction sets along with considering the interaction between the two. Normally, we try to make changes in software because it’s the less costly but as hardware become more malleable then that equation changes. It also means we are now in a position to simply describe the function of the device that we want and allow a compiler to determine how that should be instantiated in the instruction sets.

   My desire to add a sun dial to my phone could be achieved through software or electronic or physical means or a combination of all — a compiler could work out that decision tree for me. This opens up a possibility for an entire new form of programming language that compiles down to physical, electronic and coding forms and where designers concentrate on describing the function of the thing and even object inheritance in the physical world. I called this theoretical programming language SpimeScript (Point 6) in honour of the marvellous book by Bruce Sterling on Shaping Things. This topic was my central theme of a talk I gave at Euro OSCON in 2006.

   However, I had previously raised these discussions within the parent company and had become aware that whilst we might be able to make far future anticipations of change, they were increasingly built on layers of uncertainty and were increasingly unfamiliar and uncomfortable to others. The further we went, the crazier the ideas sounded and the more concerned people became. This itself creates a problem if you intend to motivate a team towards a goal. Hence, if I was going to choose a course of action, it needed to push the boundary but not too far so that it seemed like science fiction.

   I was starting to feel uncomfortable with: 
   Where 1 — focus on the online photo service, for reasons of inertia and conflict.

   Where 4 — build something novel and new based upon future industrialised services, for being too far reaching.
   The question now became; given our choices could we influence the market in any way to benefit us? Could that help us decide why here over there?

