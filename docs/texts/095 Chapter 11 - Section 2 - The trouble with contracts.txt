Chapter 11 - Section 2.: The trouble with contracts

   Contracts like plans are often the bane of my life. It’s not that they don’t have a use, they do in terms of setting expectations. Unfortunately, for some reason that I have yet to fathom, people tend to invoke mystical properties around contracts. They tend to believe that the contract or plan represents a reality that is foretold — “If it’s in the contract then it must happen as it is written”. This is quickly followed by disappointment and disputes when it doesn’t. But surely, that’s the point of the contract — “we want to know what is being delivered!”

   To explain why that principle is the problem then I’m going to use an example for a communication platform for a large organisation with a distributed workforce that often worked on events. This organisation had a detailed plan for the communication platform, an exhaustive specification (hundreds of pages) and a division of the system into lots for contracting. It all seemed very sensible. However, as is my usual style, when I first met the team then I asked the question — “What is the user need?”

   The responses were somewhat elusive and wispy. It was felt that the answers were in the pages of the specification but they were not to hand. No-one had put them together. So, we spent a few hours and mapped the system out (see figure 136). The basic user needs were device to device communication (e.g. “I need to tell Joe to pick up a box”), point to multiple points (e.g. “I need to tell all my team to come to Sheffield”), emergency function (e.g. “We need more staff at this event”), scheduling (e.g. “I need to know where to go next”) to various applications, video recording and even simple use as a telephone.
See    Figure 136: Communication Platform
 for more details.
   To make the system manageable, the organisation had broken it down into what it considered to be sensible contracts based broadly upon financial value and other characteristics. However, when I overlaid those contract “lots” onto the map then there was an obvious problem. One lot known as “C” was very broad including items which were industrialised and others which were highly specialised, often custom made (see figure 137).
See    Figure 137: Trouble with outsourcing
 for more details.
   Why is this a problem? Let us assume we apply an outsourcing contract to Lot “C” for delivery against some specification. Obviously we want to know what’s being delivered hence we put effort into writing the specification. We have some form of competitive tender process which many potential suppliers bid for.

   We hope the suppliers will naturally try to be competitive in their bids. However, in order to do so then the suppliers need to manage their own risks. One of the risks is the change of specification. For example, if you asked me to bid for providing 10 tons of gold and I won the lot with a competitive price, then it would be for delivering 10 tons of gold and not 10 tons of platinum or 10 tons of diamonds. If you change the specification then I’m going to charge you.

   In any system governed by such contracts and specification then there will be a change control process as it’s only reasonable that if we change our mind then we incur the cost of this. These change control processes tend to be burdensome and expensive because they’re designed for minimising change and for delivering against the specification. Even a simple change can incur rewrites of the specification, analysis of impacts and many other steps that add up to considerable costs.

   But look again at the map above and in particular Lot “C”. Some of the components are industrialised which means they are unlikely to change and are suited to this contract approach. We can specify what we want here. However, some of the components are nearer the uncharted space. We don’t know what we want here, no-one does. These components will change and we will incur that change control cost. The problem is we’re applying a principle of “we want to know what is being delivered” to components that we cannot possibly know what is going to be delivered. The one thing we can guarantee with those custom built activities are they will change. We are doomed to invoke the expensive change control cost process at the point the contract is signed. The cost will spiral and dispute will happen.

   Let me be crystal clear. We can anticipate dispute even though we haven’t yet started. I can also tell you that some fool of a Took will decide that the solution to this problem for future projects is “better specification”. This will not only increase the costs in trying to describe the unknown but repeats the same mistake of change control costs by trying to define the unknown. Unfortunately, without mapping the environment and overlaying the contract structure then you won’t be able to find this problem until you hit it i.e. after the contracts are signed. Specification documents and business process diagrams don’t provide you with the situational awareness you need for sensible contracting.

   In 2008, I would commonly see this problem. Outsourcing had already got a bad name but in truth the problem isn’t outsourcing, it isn’t even contracts, it’s the way we apply such approaches across very broad systems containing both industrialised and often novel components. There’s a far better way to deal with such systems.

